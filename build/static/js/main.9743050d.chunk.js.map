{"version":3,"sources":["Components/DetailToday.js","img/2.mp4","Components/HomeBackground.js","Components/Detail7Days.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["DetailToday","todayDetail","todayTime","className","id","src","alt","HomePageBackground","autoPlay","muted","loop","video","type","Detail7Days","props","getDay","i","today","Date","getUTCDay","dayList","day","document","getElementById","textContent","city","state","currentCity","this","getWeather","apiUrl","console","log","fetch","response","json","data","results","geometry","location","lng","lat","apiUrlSecond","responseSecond","dataSecond","temp","current","weather","todayIcon","icon","main","todayTemp","toString","split","daily","max","min","highTemp","lowTemp","idHigh","order","idLow","idIcon","React","Component","Home","handleSubmit","e","preventDefault","stopTime","newCity","changeCity","setState","setTimeout","mainPageDisplay","updateTime","updateWeather","handleOnChangeCity","target","value","clearInterval","timer","changePage","inputCity","todayMonth","todayDate","todayHour","todayMinute","apiUrl1","apiUrl2","responseToday","dataToday","timezone","GMT","apiUrl3","responseGMT","dataGMT","utc_datetime","utc_offset","month","slice","date2","hour","Number","minute","information","getMonth","getTime","date","onSubmit","onChange","name","placeholder","onClick","cc","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oSAoCeA,EAhCK,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,UAAd,OAClB,mCAEE,qBAAKC,UAAU,8BAAf,SAEE,sBAAKA,UAAU,6CAAf,UACE,sBAAMC,GAAG,eACT,cAAC,IAAD,CAAWD,UAAU,WAGrB,sBAAKA,UAAU,kDAAf,UACE,sBAAMC,GAAG,6BAAT,SAAuCH,IAEvC,sBAAMG,GAAG,2BAAT,SAAqCF,OAGvC,sBAAKC,UAAU,8CAAf,UACE,qBAAKC,GAAG,cAAcD,UAAU,2BAA2BE,IAAI,GAAGC,IAAI,UAEtE,qBAAKH,UAAU,8CAAf,SACE,sBAAMC,GAAG,6BCxBN,MAA0B,8BCyB1BG,EAfY,kBACzB,sBAAKJ,UAAU,uBAAf,UAEE,qBAAKA,UAAU,+BACf,qBAAKA,UAAU,2BAAf,SACE,wBAAOK,UAAQ,EAACC,OAAK,EAACC,MAAI,EAACN,GAAG,oBAA9B,UACE,wBAAQC,IAAKM,EAAOC,KAAK,cAD3B,sDCyNSC,E,kDAjOX,WAAYC,GAAO,IAAD,uBACd,cAAMA,IAaVC,OAAS,WACL,IAAI,IAAIC,EAAE,EAAGA,EAAE,EAAGA,GAAG,EAAG,CACpB,IAAMC,GAAQ,IAAIC,MAAOC,YACnBC,EAAU,CAAC,SAAS,UAAU,YAAY,WAAW,SAAS,WAAW,UAGzEC,EAAG,UADK,CAAC,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,WACnCL,GAAZ,SAGLM,SAASC,eAAT,UAA2BF,IAAOG,YADnCP,EAAMD,EAAI,EACuCI,EAAQH,EAAMD,GAGdI,EAAQH,EAAMD,EAAE,KA1B1D,IAERS,EAAQ,EAAKX,MAAbW,KAFQ,OAGd,EAAKC,MAAQ,CACTC,YAAcF,GAJJ,E,0KASdG,KAAKb,SACLa,KAAKC,a,kTAuBCF,EAAeC,KAAKF,MAApBC,YAGAG,EAAS,uEAECH,EAFD,gDAGfI,QAAQC,IAAIF,G,SACWG,MAAMH,G,cAAvBI,E,gBACaA,EAASC,O,cAAtBC,E,SACYA,EAAKC,QAAQ,GAAGC,SAASC,SAApCC,E,EAAAA,IAAIC,E,EAAAA,IAILC,EAAe,iEAEND,EAFM,gBAEKD,EAFL,0FAKrBT,QAAQC,IAAIU,G,UACiBT,MAAMS,G,eAA7BC,E,iBACmBA,EAAeR,O,QAexC,IAfMS,E,OAGCC,EAAQD,EAAWE,QAAnBD,K,EACwBD,EAAWE,QAAQC,QAAQ,GAA9CC,E,EAALC,KAAgBC,E,EAAAA,KACjBC,EAAYN,EAAKO,WAAWC,MAAM,KAAK,GAG7C/B,SAASC,eAAe,cAAcC,YAAc2B,EACpD7B,SAASC,eAAe,eAAelB,IAAvC,2CAAiF2C,EAAjF,WACA1B,SAASC,eAAe,eAAeC,YAAc0B,EAErD5B,SAASC,eAAe,8BAA8BC,YAAcG,EAG5DX,EAAE,EAAGA,EAAE,EAAGA,GAAG,EAAI,EACH4B,EAAWU,MAAMtC,EAAE,GAAG6B,KAAjCU,EADa,EACbA,IAAIC,EADS,EACTA,IACJP,EAAQL,EAAWU,MAAMtC,EAAE,GAAG+B,QAAQ,GAAtCE,KAEDQ,EAAWF,EAAIH,WAAWC,MAAM,KAAK,GACrCK,EAAUF,EAAIJ,WAAWC,MAAM,KAAK,GAGpCM,EARc,WAMdC,EAAQ,CAAC,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,YAEhC5C,GARJ,UASd6C,EATc,UASHD,EAAM5C,GATH,SAUd8C,EAVc,UAUFF,EAAM5C,GAVJ,UAWpBM,SAASC,eAAT,UAA2BuC,IAAUzD,IAArC,2CAA+E4C,EAA/E,WACA3B,SAASC,eAAT,UAA2BoC,IAAUnC,YAAciC,EACnDnC,SAASC,eAAT,UAA2BsC,IAASrC,YAAckC,E,sIAKtD,OACE,mCAEE,sBAAKvD,UAAU,+CAAf,UAEE,qBAAKA,UAAU,2CAAf,SACE,sBAAMC,GAAG,kBAGX,qBAAKD,UAAU,4CAAf,SACE,qBAAKC,GAAG,eAAeD,UAAU,0BAA0BE,IAAI,GAAGC,IAAI,aAGxE,qBAAKH,UAAU,2CAAf,SACE,sBAAMC,GAAG,eAAT,SACE,cAAC,IAAD,QAIJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,cAAT,SACE,cAAC,IAAD,QAKJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,iBAGX,qBAAKD,UAAU,4CAAf,SACE,qBAAKC,GAAG,cAAcD,UAAU,0BAA0BE,IAAI,GAAGC,IAAI,YAGvE,qBAAKH,UAAU,2CAAf,SACE,sBAAMC,GAAG,cAAT,SAEE,cAAC,IAAD,QAIJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,aAAT,SAEE,cAAC,IAAD,QAKJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,iBAGX,qBAAKD,UAAU,4CAAf,SACE,qBAAKC,GAAG,cAAcD,UAAU,0BAA0BE,IAAI,GAAGC,IAAI,YAGvE,qBAAKH,UAAU,2CAAf,SACE,sBAAMC,GAAG,cAAT,SACE,cAAC,IAAD,QAIJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,aAAT,SACE,cAAC,IAAD,QAKJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,iBAGX,qBAAKD,UAAU,4CAAf,SACE,qBAAKC,GAAG,cAAcD,UAAU,0BAA0BE,IAAI,GAAGC,IAAI,YAGvE,qBAAKH,UAAU,2CAAf,SACE,sBAAMC,GAAG,cAAT,SACE,cAAC,IAAD,QAIJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,aAAT,SACE,cAAC,IAAD,QAKJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,iBAGX,qBAAKD,UAAU,4CAAf,SACE,qBAAKC,GAAG,cAAcD,UAAU,0BAA0BE,IAAI,GAAGC,IAAI,YAGvE,qBAAKH,UAAU,2CAAf,SACE,sBAAMC,GAAG,cAAT,SACE,cAAC,IAAD,QAIJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,aAAT,SACE,cAAC,IAAD,QAKJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,mBAGX,qBAAKD,UAAU,4CAAf,SACE,qBAAKC,GAAG,gBAAgBD,UAAU,0BAA0BE,IAAI,GAAGC,IAAI,cAGzE,qBAAKH,UAAU,2CAAf,SACE,sBAAMC,GAAG,gBAAT,SACE,cAAC,IAAD,QAIJ,qBAAKD,UAAU,2CAAf,SACE,sBAAMC,GAAG,eAAT,SACE,cAAC,IAAD,iB,GAvNQ2D,IAAMC,WC8TjBC,E,kDAxTX,WAAYnD,GAAQ,IAAD,uBACf,cAAMA,IA+BVoD,aAAe,SAACC,GACZA,EAAEC,iBAGF,EAAKC,WAJa,IAOZC,EADc,EAAK5C,MAAnB6C,WACqB,GAC3B,EAAKC,SAAS,CACV7C,YAAY2C,IAIhBG,YAAW,WACP,EAAKD,SAAS,CACVE,iBAAgB,MAEtB,KAGFD,YAAW,WAAO,IACR9C,EAAe,EAAKD,MAApBC,YACN,EAAKgD,WAAWhD,GAChB,EAAKiD,cAAcjD,KACrB,IAxDa,EA4DnBkD,mBAAqB,SAACV,GAAM,IAGlBxC,EAAe,EAAKD,MAApBC,YACN,EAAK6C,SAAS,CACVD,WAAa,CAACJ,EAAEW,OAAOC,MAAMpD,MAjElB,EA2NnB0C,SAAW,kBAAMW,cAAc,EAAKC,QA3NjB,EA8NnBC,WAAa,WAAO,IACVR,EAAmB,EAAKhD,MAAxBgD,gBAEN,OADA3C,QAAQC,IAAI0C,GACRA,EAGG,WAFI,0BAlOI,IAERS,EAAa,EAAKrE,MAAlBqE,UAFQ,OAGf,EAAKzD,MAAQ,CACTC,YAAawD,EACbT,iBAAiB,EACjBU,WAAW,GACXC,UAAU,GACVC,UAAU,GACVC,YAAY,GACZhB,WAAY,CAAC,GAAG,KAVL,E,gLAqBT5C,EAAeC,KAAKF,MAApBC,YACNC,KAAK+C,WAAWhD,GAChBC,KAAKgD,cAAcjD,G,6KA+CTA,G,oKAOJ6D,EAAU,uEAEI7D,EAFJ,gD,SAGOM,MAAMuD,G,cAAvBtD,E,gBACaA,EAASC,O,cAAtBC,E,SACkCA,EAAKC,QAAQ,GAA9CC,SAAUC,SAAUE,E,EAAAA,IAAID,E,EAAAA,IAC/BT,QAAQC,IAAIwD,GAENC,EAAU,iEACAhD,EADA,gBACWD,EADX,2CAEhBT,QAAQC,IAAIyD,G,UAEgBxD,MAAMwD,G,eAA5BC,E,iBACkBA,EAAcvD,O,WAAhCwD,E,OACCC,EAAYD,EAAZC,SAIE,KAHHC,EAAMD,EAAS,M,wBAIfE,E,+CACN/D,QAAQC,IAAI8D,G,UACc7D,MAAM6D,G,eAA1BC,E,iBACgBA,EAAY5D,O,eAA5B6D,E,OACCC,EAA2BD,EAA3BC,aAAaC,EAAcF,EAAdE,WACdC,EAAQF,EAAa7C,WAAWgD,MAAM,EAAE,GACxCC,EAAQJ,EAAa7C,WAAWgD,MAAM,EAAE,IAC1CE,EAAOC,OAAON,EAAa7C,WAAWgD,MAAM,GAAG,KAC7CI,EAASP,EAAa7C,WAAWgD,MAAM,GAAG,IAChDE,GAAQC,OAAOL,EAAW9C,WAAWgD,MAAM,EAAE,IAIvCK,EAAc,CADdC,EADY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC1DP,EAAM,EAAE,GACLE,EAAMC,EAAKE,GAGzC5E,KAAK4C,SAAS,CACVY,WAAWsB,EACXrB,UAAUgB,EACVf,UAAUgB,EACVf,YAAYiB,I,kBAETC,G,aAGHZ,EAAI,G,wBACFC,E,uDAA0DD,GAChE9D,QAAQC,IAAI8D,G,UACc7D,MAAM6D,G,eAA1BC,E,iBACgBA,EAAY5D,O,eAA5B6D,E,OACCC,EAA2BD,EAA3BC,aAAaC,EAAcF,EAAdE,WACdC,EAAQF,EAAa7C,WAAWgD,MAAM,EAAE,GACxCC,EAAQJ,EAAa7C,WAAWgD,MAAM,EAAE,IAC1CE,EAAOC,OAAON,EAAa7C,WAAWgD,MAAM,GAAG,KAC7CI,EAASP,EAAa7C,WAAWgD,MAAM,GAAG,IAChDE,GAAQC,OAAOL,EAAW9C,WAAWgD,MAAM,EAAE,IAKvCK,EAAc,CAFdC,EADY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC1DP,EAAM,EAAE,GAELE,EAAMC,EAAKE,GAEzC5E,KAAK4C,SAAS,CACVY,WAAWsB,EACXrB,UAAUgB,EACVf,UAAUgB,EACVf,YAAYiB,I,kBAETC,G,eAEDX,E,sDAAyDD,GAC/D9D,QAAQC,IAAI8D,G,UACc7D,MAAM6D,G,eAA1BC,E,iBACgBA,EAAY5D,O,eAA5B6D,E,OACCC,EAA2BD,EAA3BC,aAAaC,EAAcF,EAAdE,WACdC,EAAQF,EAAa7C,WAAWgD,MAAM,EAAE,GACxCC,EAAQJ,EAAa7C,WAAWgD,MAAM,EAAE,IAC1CE,EAAOC,OAAON,EAAa7C,WAAWgD,MAAM,GAAG,KAC7CI,EAASP,EAAa7C,WAAWgD,MAAM,GAAG,IAChDE,GAAQC,OAAOL,EAAW9C,WAAWgD,MAAM,EAAE,IAKvCK,EAAc,CAFdC,EADY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC1DP,EAAM,EAAE,GAELE,EAAMC,EAAKE,GAEzC5E,KAAK4C,SAAS,CACVY,WAAWsB,EACXrB,UAAUgB,EACVf,UAAUgB,EACVf,YAAYiB,I,kBAETC,G,kLAIO9E,G,8HAERG,EAAS,uEAECH,EAFD,gDAGfI,QAAQC,IAAIF,G,SACWG,MAAMH,G,cAAvBI,E,gBACaA,EAASC,O,cAAtBC,E,SACkCA,EAAKC,QAAQ,GAA9CC,SAAUC,SAAUE,E,EAAAA,IAAID,E,EAAAA,IAGzBE,EAAe,iEAEND,EAFM,gBAEKD,EAFL,0FAKrBT,QAAQC,IAAIU,G,UACiBT,MAAMS,G,eAA7BC,E,iBACmBA,EAAeR,O,QAaxC,IAbMS,E,OAGCC,EAAQD,EAAWE,QAAnBD,K,EACwBD,EAAWE,QAAQC,QAAQ,GAA9CC,E,EAALC,KAAgBC,E,EAAAA,KACjBC,EAAYN,EAAKO,WAAWC,MAAM,KAAK,GAE7C/B,SAASC,eAAe,cAAcC,YAAc2B,EACpD7B,SAASC,eAAe,eAAelB,IAAvC,2CAAiF2C,EAAjF,WACA1B,SAASC,eAAe,eAAeC,YAAc0B,EACrD5B,SAASC,eAAe,8BAA8BC,YAAcG,EAG5DX,EAAE,EAAGA,EAAE,EAAGA,GAAG,EAAI,EACH4B,EAAWU,MAAMtC,EAAE,GAAG6B,KAAjCU,EADa,EACbA,IAAIC,EADS,EACTA,IACJP,EAAQL,EAAWU,MAAMtC,EAAE,GAAG+B,QAAQ,GAAtCE,KACDQ,EAAWF,EAAIH,WAAWC,MAAM,KAAK,GACrCK,EAAUF,EAAIJ,WAAWC,MAAM,KAAK,GAGpCM,EAPc,WAKdC,EAAQ,CAAC,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,YAEhC5C,GAPJ,UAQd6C,EARc,UAQHD,EAAM5C,GARH,SASd8C,EATc,UASFF,EAAM5C,GATJ,UAUpBM,SAASC,eAAT,UAA2BuC,IAAUzD,IAArC,2CAA+E4C,EAA/E,WACA3B,SAASC,eAAT,UAA2BoC,IAAUnC,YAAciC,EACnDnC,SAASC,eAAT,UAA2BsC,IAASrC,YAAckC,E,6KAiBzC/B,G,iEACbC,KAAK+E,QAAQhF,G,2IAOHA,GACVC,KAAKC,WAAWF,K,+BAGV,IACCA,EAAeC,KAAKF,MAApBC,YACPI,QAAQC,IAAIL,GAFP,MAGgDC,KAAKF,MAAnD0D,EAHF,EAGEA,WAAWC,EAHb,EAGaA,UAAUC,EAHvB,EAGuBA,UAAUC,EAHjC,EAGiCA,YAChCqB,EAAI,UAAMxB,EAAN,YAAoBC,EAApB,YAAiCC,GAAjC,OAA6CC,GAEvD,OACE,mCACE,gCACE,qBAAKpF,UAAU,WAAf,SACE,sBAAKA,UAAWyB,KAAKsD,aAArB,UAEE,cAAC,EAAD,IAEA,sBAAK/E,UAAU,oBAAf,UACE,oDAGA,cAAC,IAAD,CAAgBA,UAAU,yBAG5B,qBAAKA,UAAU,sBAAf,SACE,qBAAKC,GAAG,OAAR,SACE,sBAAMyG,SAAUjF,KAAKsC,aAArB,SACE,uBACE4C,SAAUlF,KAAKiD,mBACf1E,UAAU,mBACVS,KAAK,OACLmG,KAAK,SACLC,YAAY,+BAQxB,sBAAK7G,UAAU,cAAf,UACE,qBAAKA,UAAU,4BAEf,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAM0G,SAAUjF,KAAKsC,aAArB,SACE,uBACE4C,SAAUlF,KAAKiD,mBACf1E,UAAU,6BACVS,KAAK,OACLqG,QAASrF,KAAKsF,GACdF,YAAY,iBAMpB,cAAC,EAAD,CACE/G,YAAa0B,EACbzB,UAAW0G,IAGb,cAAC,EAAD,CAAanF,KAAME,gB,GAhThBoC,IAAMC,WCQVmD,MAVf,WACE,OACE,mCAGE,cAAC,EAAD,OCFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzG,SAASC,eAAe,SAM1B6F,M","file":"static/js/main.9743050d.chunk.js","sourcesContent":["import React from 'react';\nimport { WiDegrees } from \"react-icons/wi\";\n\n\nconst DetailToday = ({todayDetail,todayTime}) => (\n  <>\n    {/* <h1>3.2 这里放详情页 左侧的 today 信息</h1> */}\n    <div className=\"weatherPage__today col-l-12\">\n\n      <div className='weatherPage__today weatherPage__today--tep'>\n        <span id='today--tep' />\n        <WiDegrees className=\"degree\" />\n\n    \n        <div className='weatherPage__today weatherPage__today--location'>\n          <span id='weatherPage__today--detail'>{todayDetail}</span>\n          {/* <br /> */}\n          <span id='weatherPage__today--time'>{todayTime}</span>\n        </div>\n\n        <div className='weatherPage__today weatherPage__today--icon'>\n          <img id='today--icon' className=\"weatherPage__today--icon\" src='' alt=\"today\" />\n                  \n          <div className='weatherPage__today weatherPage__today--main'>\n            <span id='today--main' />\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n    \n  </>\n\n)\n\nexport default DetailToday","export default __webpack_public_path__ + \"static/media/2.bba5a613.mp4\";","import React from 'react';\n\n// import video from \"../img/1.mp4\"\nimport video from \"../img/2.mp4\"\n// import video from \"../img/3.mp4\"\n// import video from \"../img/4.mp4\"\n// import video from \"../img/5.mp4\"\n// import {Display} from \"./Detail\"\n\n\nconst HomePageBackground = () => (\n  <div className=\"mainPage__background\">\n    {/* <h1>2.1 这里放首页背景的动画</h1> */}\n    <div className=\"mainPage__background-image\" />\n    <div className=\"mainPage__player-wrapper\">\n      <video autoPlay muted loop id=\"mainPage__myVideo\">\n        <source src={video} type=\"video/mp4\" />\n        Your browser does not support HTML5 video.\n      </video>\n    </div>\n  </div>\n  \n\n)\n\nexport default HomePageBackground","import React from 'react';\nimport { WiDegrees } from \"react-icons/wi\";\n// eslint-disable-next-line\n\n\n\nclass Detail7Days extends React.Component {\n    constructor(props){\n        super(props)\n        const{city} = this.props\n        this.state = {\n            currentCity : city        \n        }\n    }\n\n    async componentDidMount() {\n        this.getDay();\n        this.getWeather();\n    }\n\n    // 得到接下来七天的星期名字\n    getDay = () => {\n        for(let i=0; i<6; i+=1) {\n            const today = new Date().getUTCDay()\n            const dayList = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\n            // console.log(dayList[today])\n            const order = ['second','third','forth','fifth','sixth','seventh']\n            const day = `${order[i]}--day`;\n\n            if(today+i < 7) {\n                document.getElementById(`${day}`).textContent = dayList[today+i];\n                // console.log(dayList[today+i])\n            }else{\n                document.getElementById(`${day}`).textContent = dayList[today+i-7];\n            }         \n        }\n    }\n\n    async getWeather () {\n\n        const{currentCity} = this.state;\n        // const currentCity = inputCity;\n        // ------------------第1个api函数----------------\n        const apiUrl = `https://maps.googleapis.com/maps/api/geocode/`\n        +\n        `json?address=${currentCity}&key=AIzaSyCowgF-_iCq3G2JN4JaM-zj3fmD-7OQP30`\n        console.log(apiUrl);\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        const {lng,lat} = data.results[0].geometry.location // 解构\n        // this.getDetail();// 回调函数，调用完getCoord再调用getDetail（）\n\n        // ------------------第二个api函数----------------\n        const apiUrlSecond = `https://api.openweathermap.org/data/2.5/`\n        +\n        `onecall?lat=${lat}&lon=${lng}&exclude=minutely,hourly,alerts`\n        +\n        `&appid=9bf729522efcbfd825ccfbef7c8f2410&units=metric`\n        console.log(apiUrlSecond)\n        const responseSecond = await fetch(apiUrlSecond);\n        const dataSecond = await responseSecond.json();\n \n        // 获取当天的温度 icon description 信息\n        const {temp} = dataSecond.current;\n        const {icon:todayIcon, main} = dataSecond.current.weather[0];\n        const todayTemp = temp.toString().split(\".\")[0];\n\n        \n        document.getElementById('today--tep').textContent = todayTemp;\n        document.getElementById('today--icon').src = `http://openweathermap.org/img/wn/${todayIcon}@2x.png`;\n        document.getElementById('today--main').textContent = main;\n\n        document.getElementById('weatherPage__today--detail').textContent = currentCity;\n        \n      // 未来6天天气写入\n        for(let i=0; i<6; i+=1) {\n            const {max,min} = dataSecond.daily[i+1].temp;\n            const {icon} = dataSecond.daily[i+1].weather[0];\n\n            const highTemp = max.toString().split(\".\")[0];\n            const lowTemp = min.toString().split(\".\")[0];\n            const order = ['second','third','forth','fifth','sixth','seventh']\n    \n            const idHigh = `${order[i]}--high`;\n            const idLow = `${order[i]}--low`;\n            const idIcon = `${order[i]}--icon`;\n            document.getElementById(`${idIcon}`).src = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n            document.getElementById(`${idHigh}`).textContent = highTemp;\n            document.getElementById(`${idLow}`).textContent = lowTemp;\n        }\n    }\n   \n    render(){\n        return(\n          <>\n            {/* <h1>3.3 这里放详情页 右侧的 七天天气 信息</h1> */}\n            <div className=\"weatherPage__detail weatherPage__detail--day\">\n\n              <div className='weatherPage__item weatherPage__item--day'>\n                <span id='second--day' />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--icon'>\n                <img id='second--icon' className=\"weatherPage__item--icon\" src=\"\" alt=\"second\" />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='second--high'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='second--low'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              {/* third */}\n              <div className='weatherPage__item weatherPage__item--day'>\n                <span id='third--day' />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--icon'>\n                <img id='third--icon' className=\"weatherPage__item--icon\" src=\"\" alt=\"third\" />\n              </div>\n              \n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='third--high'>\n                   \n                  <WiDegrees />\n                </span>\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='third--low'>\n                   \n                  <WiDegrees />\n                </span>\n              </div>\n\n              {/* Forth\\ */}\n              <div className='weatherPage__item weatherPage__item--day'>\n                <span id='forth--day' />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--icon'>\n                <img id='forth--icon' className=\"weatherPage__item--icon\" src=\"\" alt=\"forth\" />\n              </div>\n              \n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='forth--high'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='forth--low'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              {/* fifth */}\n              <div className='weatherPage__item weatherPage__item--day'>\n                <span id='fifth--day' />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--icon'>\n                <img id='fifth--icon' className=\"weatherPage__item--icon\" src=\"\" alt=\"fifth\" />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='fifth--high'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='fifth--low'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              {/* sixth */}\n              <div className='weatherPage__item weatherPage__item--day'>\n                <span id='sixth--day' />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--icon'>\n                <img id='sixth--icon' className=\"weatherPage__item--icon\" src=\"\" alt=\"sixth\" />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='sixth--high'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='sixth--low'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              {/* seventh */}\n              <div className='weatherPage__item weatherPage__item--day'>\n                <span id='seventh--day' />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--icon'>\n                <img id='seventh--icon' className=\"weatherPage__item--icon\" src=\"\" alt=\"seventh\" />\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='seventh--high'>\n                  <WiDegrees />\n                </span>\n              </div>\n\n              <div className='weatherPage__item weatherPage__item--tep'>\n                <span id='seventh--low'>\n                  <WiDegrees />\n                </span>\n              </div>\n            </div>\n \n \n          </>\n        )\n    }\n}\n\nexport default Detail7Days","import React from 'react';\nimport { IoRainyOutline } from 'react-icons/io5';\nimport DetailToday from './DetailToday'\nimport HomePageBackground from './HomeBackground';\n/* eslint-disable camelcase */\n/* eslint-disable class-methods-use-this */\n// eslint-disable-next-line\nimport Detail7Days from './Detail7Days'\n\n\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        const {inputCity} = this.props\n        this.state = {\n            currentCity: inputCity,\n            mainPageDisplay: true, // true即显示，false=>display:none\n            todayMonth:'',\n            todayDate:'',\n            todayHour:'',\n            todayMinute:'',\n            changeCity: ['','']\n        }\n    }\n\n    // 1. 只会在装载之前调用一次，在 render 之前调用\n    // componentWillMount(){\n    // }\n    \n    // 2. 只会在装载完成之后调用一次，在 render 之后调用\n    async componentDidMount() {\n        // 初始加载页面显示的信息\n        const{currentCity} = this.state\n        this.updateTime(currentCity)\n        this.updateWeather(currentCity)\n    }\n\n    // 3. 更新后 在render之后调用\n    // componentDidUpdate(){\n    // }\n    \n    \n    // 提交搜索后，更新今天时间和未来七天天气数据\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        // 先停止初始的setInterval,在进行新的计时\n        this.stopTime()\n        \n        const{changeCity} = this.state\n        const newCity = changeCity[0]\n        this.setState({\n            currentCity:newCity,\n        })\n\n        // 延迟1s消失主页，更新数据\n        setTimeout(() => {\n            this.setState({\n                mainPageDisplay:false\n            })\n        },1000)\n\n        // 等更新完current city后 再执行两个更新函数，否则同时执行，currentCity还是旧的信息\n        setTimeout(() => {\n            const{currentCity} = this.state\n            this.updateTime(currentCity)\n            this.updateWeather(currentCity)\n        },1)\n    }\n\n    // 提交搜索后，获取输入的地点信息，更改state\n    handleOnChangeCity = (e) => {\n        // console.log(e.target.value)\n        // 使用changeCity寄存输入的信息，避免文字在没提交前一直在变动\n        const{currentCity} = this.state\n        this.setState({\n            changeCity : [e.target.value,currentCity]\n        })\n    }\n\n    // 得到输入地点的实时时间\n    async getTime(currentCity) {\n\n        // 获取本机当地时间：\n        // const time = `${new Date().toString().slice(4,10)} ${new Date().toString().slice(16,24)}`\n        // document.getElementById('weatherPage__today--time').textContent = time;\n\n        // 获取用户输入地址对应的时间：\n        const apiUrl1 = `https://maps.googleapis.com/maps/api/geocode/`\n            +\n            `json?address=${currentCity}&key=AIzaSyCowgF-_iCq3G2JN4JaM-zj3fmD-7OQP30`\n        const response = await fetch(apiUrl1);\n        const data = await response.json();\n        const {geometry:{location:{lat,lng}}} = data.results[0] // 解构\n        console.log(apiUrl1)\n\n        const apiUrl2 = `https://api.openweathermap.org/data/2.5/`\n        +`weather?lat=${lat}&lon=${lng}&appid=9bf729522efcbfd825ccfbef7c8f2410`\n        console.log(apiUrl2)\n\n        const responseToday = await fetch(apiUrl2);\n        const dataToday = await responseToday.json();\n        const {timezone} = dataToday // 解构\n        const GMT = timezone/3600\n        \n        // (UTC) is equal to the local time minus(-) the UTC offset.\n        if(GMT===0) {\n        const apiUrl3 = `http://worldtimeapi.org/api/timezone/Etc/GMT`\n        console.log(apiUrl3)\n        const responseGMT = await fetch(apiUrl3);\n        const dataGMT = await responseGMT.json();\n        const {utc_datetime,utc_offset} = dataGMT // 解构\n        const month = utc_datetime.toString().slice(5,7)\n        const date2 = utc_datetime.toString().slice(8,10)\n        let hour = Number(utc_datetime.toString().slice(11,13))\n        const minute = utc_datetime.toString().slice(13,19)\n        hour -= Number(utc_offset.toString().slice(0,3))\n        // console.log(hour,minute)\n        const monthList = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n        const getMonth = monthList[month/1-1]\n        const information = [getMonth,date2,hour,minute]\n        // console.log(information)\n        \n        this.setState({\n            todayMonth:getMonth,\n            todayDate:date2,\n            todayHour:hour,\n            todayMinute:minute\n        })\n        return information            \n        //   document.getElementById('weatherPage__today--time').textContent = `${getMonth}.${date2} ${hour}${minute}`;\n\n        }if(GMT>0){\n        const apiUrl3 = `http://worldtimeapi.org/api/timezone/Etc/GMT+${GMT}`\n        console.log(apiUrl3)\n        const responseGMT = await fetch(apiUrl3);\n        const dataGMT = await responseGMT.json();\n        const {utc_datetime,utc_offset} = dataGMT // 解构\n        const month = utc_datetime.toString().slice(5,7)\n        const date2 = utc_datetime.toString().slice(8,10)\n        let hour = Number(utc_datetime.toString().slice(11,13))\n        const minute = utc_datetime.toString().slice(13,19)\n        hour -= Number(utc_offset.toString().slice(0,3))\n        // console.log(hour,minute)\n        const monthList = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n        const getMonth = monthList[month/1-1]\n        //   document.getElementById('weatherPage__today--time').textContent = `${getMonth}.${date2} ${hour}${minute}`;\n        const information = [getMonth,date2,hour,minute]\n        // console.log(information)\n        this.setState({\n            todayMonth:getMonth,\n            todayDate:date2,\n            todayHour:hour,\n            todayMinute:minute\n        })\n        return information\n        }\n        const apiUrl3 = `http://worldtimeapi.org/api/timezone/Etc/GMT${GMT}`\n        console.log(apiUrl3)\n        const responseGMT = await fetch(apiUrl3);\n        const dataGMT = await responseGMT.json();\n        const {utc_datetime,utc_offset} = dataGMT // 解构\n        const month = utc_datetime.toString().slice(5,7)\n        const date2 = utc_datetime.toString().slice(8,10)\n        let hour = Number(utc_datetime.toString().slice(11,13))\n        const minute = utc_datetime.toString().slice(13,19)\n        hour -= Number(utc_offset.toString().slice(0,3))\n        // console.log(hour,minute)\n        const monthList = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n        const getMonth = monthList[month/1-1]\n        //   document.getElementById('weatherPage__today--time').textContent = `${getMonth}.${date2} ${hour}${minute}`;\n        const information = [getMonth,date2,hour,minute]\n        // console.log(information)\n        this.setState({\n            todayMonth:getMonth,\n            todayDate:date2,\n            todayHour:hour,\n            todayMinute:minute\n        })\n        return information \n    }\n\n    // 得到输入地点的实时天气\n    async getWeather (currentCity) {\n        // ------------------第1个api函数----------------\n        const apiUrl = `https://maps.googleapis.com/maps/api/geocode/`\n        +\n        `json?address=${currentCity}&key=AIzaSyCowgF-_iCq3G2JN4JaM-zj3fmD-7OQP30`\n        console.log(apiUrl);\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        const {geometry:{location:{lat,lng}}} = data.results[0] // 解构\n\n        // ------------------第二个api函数----------------\n        const apiUrlSecond = `https://api.openweathermap.org/data/2.5/`\n        +\n        `onecall?lat=${lat}&lon=${lng}&exclude=minutely,hourly,alerts`\n        +\n        `&appid=9bf729522efcbfd825ccfbef7c8f2410&units=metric`\n        console.log(apiUrlSecond)\n        const responseSecond = await fetch(apiUrlSecond);\n        const dataSecond = await responseSecond.json();\n \n        // 获取当天的温度 icon description 信息\n        const {temp} = dataSecond.current;\n        const {icon:todayIcon, main} = dataSecond.current.weather[0];\n        const todayTemp = temp.toString().split(\".\")[0];\n\n        document.getElementById('today--tep').textContent = todayTemp;\n        document.getElementById('today--icon').src = `http://openweathermap.org/img/wn/${todayIcon}@2x.png`;\n        document.getElementById('today--main').textContent = main;\n        document.getElementById('weatherPage__today--detail').textContent = currentCity;\n        \n      // 未来6天天气写入\n        for(let i=0; i<6; i+=1) {\n            const {max,min} = dataSecond.daily[i+1].temp;\n            const {icon} = dataSecond.daily[i+1].weather[0];\n            const highTemp = max.toString().split(\".\")[0];\n            const lowTemp = min.toString().split(\".\")[0];\n            const order = ['second','third','forth','fifth','sixth','seventh']\n\n            const idHigh = `${order[i]}--high`;\n            const idLow = `${order[i]}--low`;\n            const idIcon = `${order[i]}--icon`;\n            document.getElementById(`${idIcon}`).src = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n            document.getElementById(`${idHigh}`).textContent = highTemp;\n            document.getElementById(`${idLow}`).textContent = lowTemp;\n        }\n    }\n\n    stopTime = () => clearInterval(this.timer)\n\n    // 更改页面display：none\n    changePage = () => {\n        const{mainPageDisplay} = this.state\n        console.log(mainPageDisplay)\n        if(!mainPageDisplay){\n            return \"mainPage__display-none\"\n        }\n        return \"mainPage\"\n    }\n\n    // 每秒更新时间\n    async updateTime(currentCity){\n        this.getTime(currentCity);\n        // this.timer = setInterval(() => {\n        //     this.getTime(currentCity);            \n        // }, 1000)\n    }\n\n    // 提交地点后，更新七天的天气\n    updateWeather(currentCity){\n        this.getWeather(currentCity)\n    }\n\n    render() {\n        const {currentCity} = this.state\n        console.log(currentCity)\n        const {todayMonth,todayDate,todayHour,todayMinute} = this.state\n        const date = `${todayMonth}.${todayDate} ${todayHour}${todayMinute}`\n\n        return(\n          <>\n            <div>\n              <div className=\"mainPage\">\n                <div className={this.changePage()}>\n\n                  <HomePageBackground />\n\n                  <div className=\"mainPage__webName\">\n                    <h1>\n                      Find Your Weather.\n                    </h1>   \n                    <IoRainyOutline className=\"mainPage__webIcon\" />\n                  </div>\n\n                  <div className=\"mainPage__SearchBar\">\n                    <div id='form'>\n                      <form onSubmit={this.handleSubmit}>\n                        <input\n                          onChange={this.handleOnChangeCity}\n                          className=\"mainPage__search\"\n                          type=\"text\"\n                          name=\"search\"\n                          placeholder=\"enter your city\"\n                        />\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className='weatherPage'>\n                <div className=\"weatherPage__background\" />\n\n                <div className=\"weatherPage__content\">\n                  <div className=\"weatherPage__search\">\n                    <form onSubmit={this.handleSubmit}>\n                      <input \n                        onChange={this.handleOnChangeCity}\n                        className=\"weatherPage__search--input\" \n                        type=\"text\" \n                        onClick={this.cc}\n                        placeholder=\"Search\"\n                      />\n                    </form>\n                  </div>          \n                </div>\n            \n                <DetailToday \n                  todayDetail={currentCity}\n                  todayTime={date}\n                />\n            \n                <Detail7Days city={currentCity} />\n\n              </div>\n            </div>\n          </>\n        )\n    }\n}\n  \nexport default Home\n","import React from \"react\";\n// import logo from './logo.svg';\nimport './App.css';\n// import Header from './Components/Header';\nimport Home from './Components/Home'\n// import NavBar from './NavBar-Example/Navbar'\n// import NavBar from './NavBar/Navbar'\n\n\nfunction App() {\n  return (\n    <>\n      {/* <Header />  */}\n      {/* <NavBar /> */}\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}